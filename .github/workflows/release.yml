name: 'C++ CI'

on:
  push:
    branches:
      - master
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake gcc-11 g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 110
          gcc --version
      
      # Установка Conan 2.x
      - name: Install Conan
        run: |
          pip install "conan>=2.0,<3.0"
          conan --version
      
      # Настройка профиля Conan
      - name: Setup Conan profile
        run: |
          conan profile detect --force
          conan profile show -pr default
          echo "=== Custom profile ==="
          cat conanProfiles/linuxRelease
      
      - name: Install dependencies with Conan
        run: |
          conan install . --profile=conanProfiles/linuxRelease --build=missing
      
      - name: Configure CMake
        run: |
          cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON
      
      - name: Build project
        run: cmake --build .
      
      - name: Run tests
        run: cmake --build . --target test
      
      - name: Create package
        run: cmake --build . --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package